{"version":3,"sources":["components/footer/Footer.jsx","components/filter/GlobalFilter.jsx","components/col_filter/ColumnFilter.jsx","components/table_parts/pagination/GoToPage.jsx","components/table_parts/pagination/PageSizing.jsx","components/table_parts/pagination/PageInfo.jsx","components/table_parts/pagination/PageButton.jsx","components/table_parts/pagination/PageButtons.jsx","components/table_parts/pagination/PageController.jsx","components/table_parts/TableRow.jsx","components/table_parts/TableBody.jsx","components/check_box/CheckBox.jsx","components/custom_hooks/useTableHooks.js","components/col_filter/FilterComp.jsx","components/table_parts/SortingIndicator.jsx","components/table_parts/TableHeadHeaders.jsx","components/table_parts/TableHead.jsx","components/table_parts/hiding_controller/HidingCtrlForColumns.jsx","components/table_parts/hiding_controller/HidingController.jsx","components/TableBooks.jsx","components/header/HeaderMain.jsx","components/errors/ErrorBoundary.jsx","App.js","reportWebVitals.js","index.js"],"names":["ModalComp","lazy","ModalContext","React","createContext","Footer","btnTxt1","btnTxt2","txt1","txt2","txt3","useState","modalIsOpen","setModalIsOpen","className","href","target","rel","type","onClick","e","fallback","Provider","value","handleModalOpen","pageInfoTxt","gitUrl","memo","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","setValue","count","length","handleChanging","useAsyncDebounce","undefined","InputGroup","Text","FormControl","onChange","placeholder","ColumnFilter","column","filterValue","setFilter","handleChangingToSetFilter","handleChangingValue","GoToPage","pageCount","gotoPage","Col","sm","md","lg","Form","Label","Select","pageNumber","Number","size","Array","map","no","i","PageSizing","pageSize","setPageSize","xs","pageSizeNo","PageInfo","pageIndex","pageOptions","Badge","bg","PageButton","onHanldeOnClick","onDisabled","onText","Button","disabled","variant","PageButtons","pageProps","pageJump","previousPage","nextPage","canNextPage","canPreviousPage","PageController","Row","TableRow","row","getRowProps","cells","cell","getCellProps","render","TableBody","page","getTableBodyProps","prepareRow","CheckBox","forwardRef","ref","indeterminate","labelTxt","rest","defaultRef","useRef","resolvedRef","useEffect","current","Check","label","useTableHooks","col_title","hooks","visibleColumns","push","columns","id","Header","getToggleAllPageRowsSelectedProps","Cell","getToggleRowSelectedProps","FilterComp","styleForFilterComp","style","canFilter","SortingIndicator","color","isSorted","isSortedDesc","TableHeadHeaders","getHeaderProps","getSortByToggleProps","marginTop","TableHead","headerGroups","headerGroup","getHeaderGroupProps","headers","ind","HidingCtrlForColumns","allColumns","getToggleHiddenProps","HidingController","getToggleHideAllColumnsProps","text","TableBooks","data","tableHooks","defaultColumn","useMemo","Filter","tableInstance","useTable","initialState","useGlobalFilter","useFilters","useSortBy","usePagination","useColumnOrder","useRowSelect","getTableProps","state","Container","fluid","Table","responsive","striped","bordered","hover","HeaderMain","title","ErrorBoundary","hasError","error","info","console","log","this","props","children","Component","App","setData","setError","isLoading","setIsLoading","data_arr","BOOKS_DATA","setTimeout","isArray","data_arr_new","productsData","Object","keys","key","accessor","Spinner","animation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17a95e9d.chunk.js","sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\r\nimport(\"../../styles/footer.css\");\r\n\r\nconst ModalComp = lazy(() => import(\"./ModalComp\"));\r\n\r\nexport const ModalContext = React.createContext();\r\n\r\nfunction Footer({ btnTxt1, btnTxt2, txt1, txt2, txt3 }) {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const pageInfoTxt =\r\n    \"The application displays data json in a table supported by react-table, react-bootstrap and bootstrap 5.0, with global and column filtering and pagination. The table has filtering (global and in columns), pagination, sorting by columns, hide / show checkboxes and one extra column for selection.\";\r\n\r\n  const gitUrl = \"https://github.com/kodencja/react-table-mocked-json\";\r\n\r\n  // console.log(\"Footer Comp.\");\r\n\r\n  return (\r\n    <footer className=\"down-buttons\">\r\n      <a\r\n        href=\"https://codencja.herokuapp.com/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <button type=\"link\" className=\"btn-down home-page-link\">\r\n          {btnTxt1}\r\n        </button>\r\n      </a>\r\n      <div className=\"footer\">\r\n        {\" \"}\r\n        <b>{txt1} </b>\r\n        <i>{txt2}</i> <strong>{txt3}</strong>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-down btn-code\"\r\n        onClick={(e) => {\r\n          setModalIsOpen(true);\r\n        }}\r\n      >\r\n        {btnTxt2}\r\n      </button>\r\n\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <ModalContext.Provider\r\n          value={{\r\n            modalIsOpen,\r\n            handleModalOpen: setModalIsOpen,\r\n            pageInfoTxt,\r\n            gitUrl,\r\n          }}\r\n        >\r\n          {/* <ModalComp isModalOpen={modalIsOpen} handleModalOpen={setModalIsOpen} /> */}\r\n          <ModalComp />\r\n        </ModalContext.Provider>\r\n      </Suspense>\r\n    </footer>\r\n  );\r\n}\r\n\r\n// export default Footer;\r\n\r\nexport default React.memo(Footer);\r\n","import React, { useState } from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nexport const GlobalFilter = ({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) => {\r\n  const [value, setValue] = useState(globalFilter);\r\n\r\n  //how many rows there are to filter\r\n  const count = preGlobalFilteredRows.length;\r\n\r\n  const handleChanging = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 250);\r\n\r\n  return (\r\n    <div className=\"d-block my-3\">\r\n      <InputGroup className=\"global-search text-end\">\r\n        <InputGroup.Text>Search:</InputGroup.Text>\r\n        <FormControl\r\n          className=\"input-search\"\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            handleChanging(e.target.value);\r\n          }}\r\n          value={value || \"\"}\r\n          placeholder={`${count} records...`}\r\n          aria-label={`${count} records...`}\r\n        />\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nexport const ColumnFilter = ({ column }) => {\r\n  const { filterValue, setFilter } = column;\r\n\r\n  const [value, setValue] = useState(filterValue);\r\n\r\n  // dodajemy minimalne opóźnienie rozpoczęcia wyszukiwania aż user skończy wpisywać jakieś słowo\r\n  const handleChangingToSetFilter = useAsyncDebounce((value) => {\r\n    setFilter(value || undefined);\r\n  }, 250);\r\n\r\n  const handleChangingValue = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <InputGroup className=\"text-start\">\r\n        <InputGroup.Text>{\"\\u225C\"}</InputGroup.Text>\r\n        <FormControl\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            handleChangingValue(e);\r\n            handleChangingToSetFilter(e.target.value);\r\n          }}\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n        />\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nconst GoToPage = ({ pageCount, gotoPage }) => {\r\n  const handleGotoPage = (e) => {\r\n    const pageNumber = e.target.value ? Number(e.target.value) : 0;\r\n    gotoPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <Col\r\n      className=\"text-end justify-content-end d-inline my-1 my-sm-0\"\r\n      sm=\"4\"\r\n      md=\"3\"\r\n      lg=\"2\"\r\n    >\r\n      <Form.Label className=\"me-1\">Go to</Form.Label>\r\n      <Form.Select\r\n        className=\"gotoPage d-inline\"\r\n        aria-label=\"Go to page\"\r\n        onChange={handleGotoPage}\r\n        size=\"sm\"\r\n      >\r\n        {[...Array(pageCount)].map((no, i) => (\r\n          <option key={i} value={i}>\r\n            {i + 1}\r\n          </option>\r\n        ))}\r\n      </Form.Select>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GoToPage;\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nconst PageSizing = ({ pageSize, setPageSize }) => {\r\n  return (\r\n    <Col\r\n      className=\"text-end justify-content-end d-inline my-1 my-sm-0 fw-light\"\r\n      xs=\"6\"\r\n      sm=\"4\"\r\n      md=\"3\"\r\n      lg=\"2\"\r\n    >\r\n      <Form.Label className=\"me-1 d-none d-sm-inline\">Per page</Form.Label>\r\n      <Form.Select\r\n        className=\"pageSizing d-inline\"\r\n        aria-label=\"Rows per page\"\r\n        value={pageSize}\r\n        size=\"sm\"\r\n        onChange={(e) => {\r\n          setPageSize(Number(e.target.value));\r\n        }}\r\n      >\r\n        {[5, 10, 20, 30, 40, 50].map((pageSizeNo) => (\r\n          <option key={pageSizeNo} value={pageSizeNo}>\r\n            {pageSizeNo}\r\n          </option>\r\n        ))}\r\n      </Form.Select>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PageSizing;\r\n","import React from \"react\";\r\nimport { Badge, Col } from \"react-bootstrap\";\r\n\r\nconst PageInfo = ({ pageIndex, pageOptions }) => {\r\n  return (\r\n    <Col xs=\"6\" sm=\"4\" md=\"3\" lg=\"2\" className=\"my-1 my-sm-0 fw-light\">\r\n      Page <Badge bg=\"secondary\">{pageIndex + 1}</Badge> of{\" \"}\r\n      <Badge bg=\"secondary\">{pageOptions.length}</Badge>{\" \"}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PageInfo;\r\n","import React from \"react\";\r\nimport { Button, Pagination } from \"react-bootstrap\";\r\n\r\nconst PageButton = ({ onHanldeOnClick, onDisabled, onText }) => {\r\n  return (\r\n    <Button\r\n      onClick={onHanldeOnClick}\r\n      disabled={onDisabled}\r\n      variant=\"outline-primary\"\r\n      size=\"sm\"\r\n      className=\"ms-1 page-buttons px-1 px-sm-2\"\r\n    >\r\n      {onText}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PageButton;\r\n","import React from \"react\";\r\nimport PageButton from \"./PageButton\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst PageButtons = ({ pageProps, pageJump }) => {\r\n  const {\r\n    previousPage,\r\n    nextPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageIndex,\r\n    gotoPage,\r\n    pageCount,\r\n  } = pageProps;\r\n\r\n  return (\r\n    <Col sm=\"6\" md=\"5\" className=\"ms-2 me-2\">\r\n      <PageButton\r\n        onHanldeOnClick={() => gotoPage(0)}\r\n        onDisabled={!canPreviousPage}\r\n        onText=\"|<\"\r\n      />\r\n      <PageButton\r\n        onHanldeOnClick={() =>\r\n          gotoPage(pageIndex > pageJump - 1 ? pageIndex - pageJump : 0)\r\n        }\r\n        onDisabled={!canPreviousPage || pageIndex < pageJump - 1}\r\n        onText=\"<<\"\r\n      />\r\n      <PageButton\r\n        onHanldeOnClick={() => previousPage()}\r\n        onDisabled={!canPreviousPage}\r\n        onText=\"Prev\"\r\n      />\r\n      <PageButton\r\n        onHanldeOnClick={() => nextPage()}\r\n        onDisabled={!canNextPage}\r\n        onText=\"Next\"\r\n      />\r\n      <PageButton\r\n        onHanldeOnClick={() =>\r\n          gotoPage(\r\n            pageIndex < pageJump - 1\r\n              ? pageJump - 1\r\n              : pageIndex < pageCount - pageJump\r\n              ? pageIndex + pageJump\r\n              : pageCount - 1\r\n          )\r\n        }\r\n        onDisabled={!canNextPage || pageIndex + 1 > pageCount - pageJump}\r\n        onText=\">>\"\r\n      />\r\n      <PageButton\r\n        onHanldeOnClick={() => gotoPage(pageCount - 1)}\r\n        onDisabled={!canNextPage}\r\n        onText=\">|\"\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PageButtons;\r\n","import React from \"react\";\r\nimport GoToPage from \"./GoToPage\";\r\nimport PageSizing from \"./PageSizing\";\r\nimport PageInfo from \"./PageInfo\";\r\nimport PageButtons from \"./PageButtons\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst PageController = ({ pageProps }) => {\r\n  const { pageIndex, pageOptions, gotoPage, pageCount, pageSize, setPageSize } =\r\n    pageProps;\r\n\r\n  return (\r\n    <Col md={12}>\r\n      <Row className=\"justify-content-end text-end my-2\">\r\n        <PageButtons pageProps={pageProps} pageJump={5} />\r\n      </Row>\r\n      <Row className=\"justify-content-end text-end my-3\">\r\n        <PageSizing pageSize={pageSize} setPageSize={setPageSize} />\r\n        <PageInfo pageIndex={pageIndex} pageOptions={pageOptions} />\r\n\r\n        <GoToPage pageCount={pageCount} gotoPage={gotoPage} />\r\n      </Row>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default React.memo(PageController);\r\n","import React from \"react\";\r\n\r\nconst TableRow = ({ row }) => {\r\n  return (\r\n    <tr {...row.getRowProps()}>\r\n      {row &&\r\n        row.cells.map((cell) => {\r\n          return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n        })}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst TableBody = ({ page, getTableBodyProps, prepareRow }) => {\r\n  return (\r\n    <tbody {...getTableBodyProps()}>\r\n      {page &&\r\n        page.map((row, i) => {\r\n          prepareRow(row);\r\n          return <TableRow row={row} key={i} />;\r\n        })}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default React.memo(TableBody);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst CheckBox = React.forwardRef(\r\n  ({ indeterminate, labelTxt, ...rest }, ref) => {\r\n    const defaultRef = useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <Form className=\"d-inline-block\">\r\n        <Form.Check label={labelTxt} ref={resolvedRef} {...rest} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CheckBox;\r\n","import CheckBox from \"../check_box/CheckBox\";\r\n     \r\n// useHook to create the selection column - the first one from left\r\nconst useTableHooks = (col_title) => {\r\n\r\n  const tableHooks = (hooks) => {\r\n    hooks.visibleColumns.push((columns) => {\r\n      return [\r\n        {\r\n          id: col_title,\r\n          Header: ({ getToggleAllPageRowsSelectedProps }) => (\r\n            <CheckBox {...getToggleAllPageRowsSelectedProps()} />\r\n          ),\r\n          Cell: ({ row }) => <CheckBox {...row.getToggleRowSelectedProps()} />,\r\n        },\r\n        // spread rest of the columns\r\n        ...columns,\r\n      ];\r\n    });\r\n  };\r\n\r\n  return tableHooks;\r\n\r\n}\r\n\r\nexport default useTableHooks\r\n","import React from \"react\";\r\n\r\nconst FilterComp = ({ column, styleForFilterComp }) => {\r\n  return (\r\n    <div style={styleForFilterComp || undefined}>\r\n      {column.canFilter ? column.render(\"Filter\") : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterComp;\r\n","import React from \"react\";\r\n\r\nconst SortingIndicator = ({ column }) => {\r\n  return (\r\n    <span className=\"order-indicator\" style={{ color: \"#007ad7\" }}>\r\n      {column.isSorted ? (column.isSortedDesc ? \" \\u25bc\" : \" \\u25b2\") : \" \"}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default SortingIndicator;\r\n","import React from \"react\";\r\nimport FilterComp from \"../col_filter/FilterComp\";\r\nimport SortingIndicator from \"./SortingIndicator\";\r\n\r\nconst TableHeadHeaders = ({ column }) => {\r\n  return (\r\n    <th {...column.getHeaderProps()}>\r\n      <div {...column.getSortByToggleProps()}>\r\n        {column && column.render(\"Header\")}\r\n        <SortingIndicator column={column} />\r\n      </div>\r\n      <FilterComp column={column} styleForFilterComp={{ marginTop: \"15px\" }} />\r\n    </th>\r\n  );\r\n};\r\n\r\nexport default TableHeadHeaders;\r\n","import React from \"react\";\r\nimport TableHeadHeaders from \"./TableHeadHeaders\";\r\n\r\nconst TableHead = ({ headerGroups }) => {\r\n  return (\r\n    <thead>\r\n      {headerGroups &&\r\n        headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()} className=\"container\">\r\n            {headerGroup.headers.map((column, ind) => (\r\n              <TableHeadHeaders column={column} key={ind} />\r\n            ))}\r\n          </tr>\r\n        ))}\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst HidingCtrlForColumns = ({ allColumns }) => {\r\n  return allColumns.map((column) => (\r\n    <span key={column.id} className=\"hideColumnCheckboxes\">\r\n      <Form className=\"d-inline-block\">\r\n        <Form.Check\r\n          label={typeof column.Header !== \"string\" ? column.id : column.Header}\r\n          className=\"ms-sm-3 ms-2 me-1\"\r\n          {...column.getToggleHiddenProps()}\r\n        />\r\n      </Form>\r\n    </span>\r\n  ));\r\n};\r\n\r\nexport default HidingCtrlForColumns;\r\n","import React from \"react\";\r\nimport CheckBox from \"../../check_box/CheckBox\";\r\nimport HidingCtrlForColumns from \"./HidingCtrlForColumns\";\r\n\r\nconst HidingController = ({\r\n  getToggleHideAllColumnsProps,\r\n  allColumns,\r\n  text,\r\n}) => {\r\n  return (\r\n    <div className=\"text-start me-3 mt-2\">\r\n      <span className=\"ms-1 me-2 fst-italic h6\">{text}</span>\r\n      <CheckBox\r\n        {...getToggleHideAllColumnsProps()}\r\n        labelTxt=\"Wszystko\"\r\n        className=\"me-1\"\r\n      />\r\n      <HidingCtrlForColumns allColumns={allColumns} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(HidingController);\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useFilters,\r\n  useRowSelect,\r\n  useColumnOrder,\r\n} from \"react-table\";\r\nimport { GlobalFilter } from \"./filter/GlobalFilter\";\r\nimport { ColumnFilter } from \"./col_filter/ColumnFilter\";\r\nimport PageController from \"./table_parts/pagination/PageController\";\r\nimport { Container, Table, Row } from \"react-bootstrap\";\r\nimport TableBody from \"./table_parts/TableBody\";\r\nimport useTableHooks from \"./custom_hooks/useTableHooks\";\r\nimport TableHead from \"./table_parts/TableHead\";\r\nimport HidingController from \"./table_parts/hiding_controller/HidingController\";\r\n\r\nconst TableBooks = ({ columns, data }) => {\r\n  // call custom useTableHooks to create selection column\r\n  const tableHooks = useTableHooks(\"wybierz\");\r\n\r\n  // add 'Filter' attribute to every column created from database\r\n  const defaultColumn = useMemo(() => {\r\n    return { Filter: ColumnFilter };\r\n  }, []);\r\n\r\n  // invoke useTable hook with starting values\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination,\r\n    useColumnOrder,\r\n    useRowSelect,\r\n    tableHooks\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    preGlobalFilteredRows,\r\n    state,\r\n    setGlobalFilter,\r\n    allColumns,\r\n    getToggleHideAllColumnsProps,\r\n  } = tableInstance;\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <HidingController\r\n          getToggleHideAllColumnsProps={getToggleHideAllColumnsProps}\r\n          allColumns={allColumns}\r\n          text=\"Pokaż / ukryj: \"\r\n        />\r\n\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n\r\n        <Table\r\n          responsive=\"sm\"\r\n          striped\r\n          bordered\r\n          hover\r\n          className=\"bg-white mt-2\"\r\n          {...getTableProps()}\r\n        >\r\n          <TableHead headerGroups={headerGroups} />\r\n          <TableBody\r\n            page={page}\r\n            getTableBodyProps={getTableBodyProps}\r\n            prepareRow={prepareRow}\r\n          />\r\n        </Table>\r\n\r\n        <PageController\r\n          pageProps={{\r\n            previousPage,\r\n            nextPage,\r\n            canNextPage,\r\n            canPreviousPage,\r\n            pageIndex,\r\n            pageOptions,\r\n            gotoPage,\r\n            pageCount,\r\n            pageSize,\r\n            setPageSize,\r\n          }}\r\n        />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TableBooks;\r\n","import React from \"react\";\r\n\r\nconst HeaderMain = ({ title }) => {\r\n  return (\r\n    <header className=\"text-center h3 fw-bold text-success py-2 py-sm-3\">\r\n      {title}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {\r\n      hasError: true,\r\n    };\r\n  }\r\n\r\n  // used to log the error information\r\n  componentDidCatch(error, info) {\r\n    console.log(error);\r\n    console.log(info);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h2>Coś poszło nie tak...</h2>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useMemo, useState, useEffect } from \"react\";\r\nimport TableBooks from \"./components/TableBooks\";\r\nimport BOOKS_DATA from \"./db/BOOKS_DATA.json\";\r\nimport HeaderMain from \"./components/header/HeaderMain\";\r\nimport { Spinner} from \"react-bootstrap\";\r\nimport ErrorBoundary from \"./components/errors/ErrorBoundary\";\r\nimport './styles/style.css'\r\nimport Footer from \"./components/footer/Footer\";\r\n\r\nfunction App() {\r\nconst [data, setData] = useState([]);\r\nconst [error, setError] = useState();\r\nconst [isLoading, setIsLoading] = useState(false);\r\n\r\n// here we should get the data e.g. by fetching from some url; we should get it either through 'data' property from the url response (database) or from the file itself\r\nuseEffect(() => {\r\n  let data_arr;\r\n  \r\n  if(BOOKS_DATA && BOOKS_DATA.data){\r\n    data_arr = BOOKS_DATA.data;\r\n  } else {\r\n    data_arr = BOOKS_DATA;\r\n  } \r\n\r\n  // check if the data is array of objects or only one object - if so put the one object into an array - setTimeout to mock data fetch lag to show spinner\r\n  setIsLoading(true);\r\n  setTimeout(()=>{\r\n  if(Array.isArray(data_arr)){\r\n    setData(data_arr);\r\n  } else if(!Array.isArray(data_arr) && typeof data_arr === 'object' && data_arr !== null){\r\n    let data_arr_new =[]; data_arr_new[0] = data_arr; \r\n      setData(data_arr_new);\r\n  } else{\r\n    setError(\"Data from the file is neither array nor object\");\r\n  }\r\n  setIsLoading(false);\r\n}, 1000)\r\n}, []);\r\n\r\n// memoise productsData as recommended in react-table ||  Array.isArray(data_arr)\r\nconst productsData = useMemo(()=> data && Array.isArray(data) ? [...data] : data,[data]);\r\n\r\n// memoise columns as recommended in react-table and get columns Headers and accessors dynamically; \r\nconst columns = useMemo(() =>{\r\n    if(data[0]) {\r\n      return Object.keys(data[0]).map((key) => {\r\n        console.log(key)\r\n        return {Header: key, accessor: key}\r\n      })\r\n    } else return [];\r\n  } ,[data]);\r\n\r\n\r\n  return (\r\n    <div className=\"mb-2 App\">\r\n      <HeaderMain title=\"Baza książek dla Bystrzaków\"/>\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n      {error ? error :\r\n      isLoading ? (<Spinner animation=\"border\" variant=\"info\" />) :\r\n      <ErrorBoundary>\r\n      <TableBooks data={productsData} columns={columns}/>\r\n\r\n      </ErrorBoundary>}\r\n      </div>\r\n      <Footer\r\n        btnTxt1=\"Home Page\"\r\n        btnTxt2=\"Code info\"\r\n        txt1=\"&copy; 2022 \"\r\n        txt2=\"by\"\r\n        txt3=\"Codencja\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}